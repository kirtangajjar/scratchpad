# this file will be present at include /var/www/conf/nginx/site.conf;

upstream php
{
    # server unix:/run/php5-fpm.sock;
    server 127.0.0.1:9000;
}
upstream debug
{
    # Debug Pool
    server 127.0.0.1:9001;
}

upstream redis
{
    server 127.0.0.1:6379;
    keepalive 10;
}

log_format ee_cache_redis '$remote_addr $upstream_response_time $srcache_fetch_status [$time_local] '
'$http_host "$request" $status $body_bytes_sent '
'"$http_referer" "$http_user_agent"';

server
{
    server_name example.com www.example.com;

    access_log /var/www/log/access.log ee_cache_redis;
    error_log /var/www/log/error.log;

    root /var/www/htdocs;

    index index.php index.html index.htm;

    # Redis NGINX CONFIGURATION
    set $skip_cache 0;
    # POST requests and URL with a query string should always go to php
    if ($request_method = POST)
    {
        set $skip_cache 1;
    }
    if ($query_string != "")
    {
        set $skip_cache 1;
    }
    # Don't cache URL containing the following segments
    if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|wp-.*\.php|index.php|/feed/|.*sitemap.*\.xml)")
    {
        set $skip_cache 1;
    }
    # Don't use the cache for logged in users or recent commenter or customer with items in cart
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in|[a-z0-9]+_items_in_cart")
    {
        set $skip_cache 1;
    }
    # Use cached or actual file if they exists, Otherwise pass request to WordPress
    location /
    {
        try_files $uri $uri/ /index.php?$args;
    }

    location /redis-fetch
    {
        internal ;
        set $redis_key $args;
        redis_pass redis;
    }
    location /redis-store
    {
        internal ;
        set_unescape_uri $key $arg_key ;
        redis2_query set $key $echo_request_body;
        redis2_query expire $key 14400;
        redis2_pass redis;
    }

    location ~ \.php$
    {
        set $key "nginx-cache:$scheme$request_method$host$request_uri";
        try_files $uri =404;

        srcache_fetch_skip $skip_cache;
        srcache_store_skip $skip_cache;

        srcache_response_cache_control off;

        set_escape_uri $escaped_key $key;

        srcache_fetch GET /redis-fetch $key;
        srcache_store PUT /redis-store key=$escaped_key;

        more_set_headers 'X-SRCache-Fetch-Status $srcache_fetch_status';
        more_set_headers 'X-SRCache-Store-Status $srcache_store_status';

        include fastcgi_params;
        fastcgi_pass php;
    }

    # Limit access to avoid brute force attack
    location = /wp-login.php
    {
        limit_req zone=one burst=1 nodelay;
        include fastcgi_params;
        fastcgi_pass php;
    }

    # Disable wp-config.txt
    location = /wp-config.txt
    {
        deny all; access_log off; log_not_found off;
    }

    # Disallow php in upload folder
    location /wp-content/uploads/
    {
        location ~ \.php$
        {
            #Prevent Direct Access Of PHP Files From Web Browsers
            deny all;
        }
    }

    # Basic locations files
    location = /favicon.ico
    {
        access_log off;
        log_not_found off;
        expires max;
    }
    location = /robots.txt
    {
        # Some WordPress plugin gererate robots.txt file
        # Refer #340 issue
        try_files $uri $uri/ /index.php?$args;
        access_log off; log_not_found off;
    }

    # Cache static files
    location ~* \.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|swf)$
    {
        add_header "Access-Control-Allow-Origin" "*";
        access_log off; log_not_found off; expires max;
    }

    # Deny hidden files
    location ~ /\.
    {
        deny all; access_log off; log_not_found off;
    }

    # allow .well-known hidden file for Let's Encrypt
    location ~ /\.well-known
    {
        allow all;
    }

    # Deny backup extensions & log files
    location ~* ^.+\.(bak|log|old|orig|original|php#|php~|php_bak|save|swo|swp|sql)$
    {
        deny all; access_log off; log_not_found off;
    }

    # Return 403 forbidden for readme.(txt|html) or license.(txt|html) or example.(txt|html)
    if ($uri ~* "^.+(readme|license|example)\.(txt|html)$")
    {
        return 403;
    }

    # Nginx Status pages
    location = /nginx_status
    {
        stub_status on; access_log off; log_not_found off;
    }

    #php status page
    location ~ ^/(status|ping)$
    {
        fastcgi_pass php;
    }

    include /var/www/conf/nginx/custom/*.conf;
}
